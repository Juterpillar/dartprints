<?php

/**
 * Implementation of hook_init().
 */
function cat_profile_init() {
  global $conf;
  // Turn off nagios checks through the web interface.
  $conf['nagios_enable_nagios'] = 0;

  // The settings below rely on the environment module.
  if (!module_exists('environment')) {
    return;
  }

  // Force mail redirect if site is not in Production.
  if (environment_current() == 'production') {
    $conf[REROUTE_EMAIL_ENABLE] = 0;
  }
  else {
    // Only force rerouting if the option hasn't already been set
    // in the settings.php configuration.
    if (!isset($conf[REROUTE_EMAIL_ENABLE])) {
      $conf[REROUTE_EMAIL_ENABLE] = 1;
    }
    // Set a Catalyst email address if one is not set.
    if (variable_get(REROUTE_EMAIL_WHITELIST, FALSE) === FALSE) {
      $conf[REROUTE_EMAIL_WHITELIST] = 'drupal-reroute@catalyst.net.nz';
    }
  }
}

/**
 * Implementation of hook_menu().
 */
function cat_profile_menu() {
  $items = array();

  // Health check for load balanced environments.
  $items['healthcheck'] = array(
    'title' => 'Healthcheck',
    'page callback' => 'cat_profile_healthcheck',
    'access callback' => 'cat_profile_healthcheck_access',
    'file' => 'cat_profile.pages.inc',
  );
  return $items;
}

function cat_profile_healthcheck_access() {
  $return = TRUE;
  drupal_alter('cat_profile_healthcheck', $return);
  return $return;
}

/**
 * Implementation of hook_healthcheck_modules_alter().
 */
function cat_profile_healthcheck_modules_alter(&$modules) {
  if (module_exists('apachesolr') && !in_array('apachesolr', $modules)) {
    $modules[] = 'apachesolr';
  }
}

/**
 * Implementation of hook_environment().
 */
function cat_profile_environment() {
  $environments = array();
  $environments['staging'] = array(
    'label' => t('Staging'),
    'description' => t('Staging sites are for content creation before publication.'),
    'allowed' => array(
      'default' => FALSE,
      'email' => FALSE,
    ),
  );
  $environments['uat'] = array(
    'label' => t('UAT'),
    'description' => t('UAT sites are for user acceptance testing.'),
    'allowed' => array(
      'default' => FALSE,
      'email' => FALSE,
    ),
  );
  $environments['dr'] = array(
    'label' => t('Disaster Recovery'),
    'description' => t('Disaster recovery installation of a production site.'),
    'allowed' => array(
      'default' => FALSE,
      'email' => FALSE,
    ),
  );
  $environments['ci'] = array(
    'label' => t('Continuous Integration'),
    'description' => t('CI Environment e.g. Jenkins'),
    'allowed' => array(
      'default' => FALSE,
      'email' => FALSE,
    ),
  );
  return $environments;
}

/**
 * Implementation of hook_archimedes_alter
 *
 * Add addional fields into the archimedes export.
 * @author Brendan Vercoelen <brendanv@catalyst.net.nz>
 */
function cat_profile_archimedes_alter(&$owl) {

  $hash = '';
  $remotes = array();
  $package = '';

  // Is this a git repo?
  // only works for current git repo and not for debian package
  if (file_exists('.git/config')) {
    $file = fopen('.git/config', 'r');
    $remote = '';
    $git = false;
    while (($buffer = fgets($file)) !== false) {
      if (substr(trim($buffer),0, 7) == '[remote') {
        preg_match('/"([^"]*)"/', trim($buffer), $matches);
        $remote = $matches[1];
      } elseif (!empty($remote)) {
        if (substr(trim($buffer),0, 3) == 'url') {
          $data = explode(" ",trim($buffer));
          $remotes[] = archimedes_value(trim(end($data)),'gitrepo')->setRemoteName($remote);
          $remote = '';
        }
      }
    }
    fclose($file);

    // add git hash data
    $hash = trim(`git log -n 1 | grep ^commit | tr -d commit\ `);

    // add git hash data
    if ($hash != '')
      $field = $owl->createField('field_git_hash', $hash);
    
    // add git repos
    if (!empty($remotes))
      $field = $owl->createField('field_git_repo',$remotes)
                   ->invokeFacet();
             
  }
  // we can also check for debian package ini
  elseif ($version = variable_get('dpkg_version', FALSE)) {
    // add debian package
    $field = $owl->createField('field_deb', $version)
                 ->invokeFacet();
  }
        
  // add mnet data
  // $field = $owl->createField('field_mdl_ref', '[[MNET YET TO BE DONE]]')
  //             ->invokeFacet();
  
  //add all catalyst users
  $field = $owl->getField('field_users');
  $result = db_query("SELECT mail FROM {users} WHERE status = 1 AND uid <> 1 AND mail like '%@catalyst.net.nz'"); // exclude root user as already added
  $users = array();
  foreach ($result as $row) {
    // remove email alias terms with "+"
    $mail = preg_replace('/(\+.*)(?=@)/', '', $row->mail);
    $users[] = $mail;
  }
  $users = array_unique($users);
  foreach ($users as $mail) {
    $user = array(
      'type' => 'mail',
      'mailto' => 'mailto:' . $mail,
    );
    $value = archimedes_value($user['mailto'], 'userreference')
              ->addUser($user);
    $field->addValue($value);
  }

  // WRMS Integration
  // Integrate WRMS systems by picking up settings set in drushrc.php files.
  if (function_exists('drush_get_option')) {
    $wrms_systems = drush_get_option('wrms_systems', array());
    foreach ($wrms_systems as &$systemid) {
      $systemid = archimedes_value($systemid);
    }
    $owl->createField('wrms_systems', $wrms_systems);
  }
}

/**
 * Implementation of hook_archimedes_rows_alter
 *
 * Add addional fields into the archimedes report.
 * @author Brendan Vercoelen <brendanv@catalyst.net.nz>
 */
function cat_profile_archimedes_rows_alter(&$rows,$owl) {
  $header = array('Remote','URI');

  if ($f = $owl->getField('field_git_repo'))
    $rows[] = array('Git Repositories',theme('table',$header,$f->toArray()));
  if ($f = $owl->getField('field_git_hash'))
    $rows[] = array('Git Hash', (string) $f);
}

/**
 * Implementation of hook_elements
 *
 * Intended to provide custom form element for mail redirect configuration page
 *
 * @author Stuart McDonald after Rohin Knight
 */
function cat_profile_elements() {
  $type['mailkey_table'] = array(
    '#input'=>TRUE,
    '#process'=>array(
      'expand_mailkey_table'=>array(),
    )
  );
  return $type;
}
