<?php

include "archimedes.class.php";

/**
* Implementation of hook_menu().
*/
function archimedes_client_menu() {
  $items = array();
  $items['archimedes'] = array(
    'title' => t('Archimedes'),
    'page callback' => 'archimedes_out',
    'access arguments' => array('access content'),
    'description' => t('Archimedes Output'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
} // archimedes_client_menu()


function archimedes_out() {
  $owl = archimedes_update();
  
  $header = array('Name','Version');

  $rows = array(
    array('Site title',$owl->getField('title')->getValues()),
    array('Description',$owl->getField('description')->getValues()),
    array('Servername',implode(', ',$owl->getField('field_servername')->getValues())),
    array('Web Server',implode(', ',$owl->getField('field_webserver')->getValues())),
    array('Web Root',$owl->getField('field_webroot')->getValues()),
    array('DB Host',$owl->getField('field_dbhost')->getValues()),
    array('DB Name',$owl->getField('field_dbname')->getValues()),
    array('Users',implode(', ',$owl->getField('field_users')->getValues())),
    array('DB Size',$owl->getField('field_db_size')->getValues()),
    array('Site Data Size',$owl->getField('field_sitedata')->getValues()),
    array('Webroot Size',$owl->getField('field_sitesize')->getValues()),
    array('User Count',$owl->getField('field_num_users')->getValues()),
    array('Modules',theme('table',$header,$owl->getField('field_drupal_mod')->getValues())),
    array('Themes',theme('table',$header,$owl->getField('field_drupal_theme')->getValues())),
  );
  
  
  $rows = array_merge($rows, module_invoke_all('archimedes_rows', $owl));
  //$a = new Archimedes();
//  $a->toXML($data);
  $header = array('Component', 'Value');
  return theme('table', $header, $rows);
  
  
} // archimedes_out()

function archimedes_update() {
  
  global $db_url;
  
  $owl = new Archimedes();
  
  $field = $owl->createField('title', 'text');
  $field->addValue(variable_get('site_name', "unknown"));
  
  $field = $owl->createField('description', 'text');
  $field->addValue("[[Yet to do]]");
  
  $field = $owl->createField('field_servername', 'uri');
  $field->addValue($_SERVER["SERVER_NAME"]);
  
  $field = $owl->createField('field_webserver', 'node_reference');
  $field->invokeMulti();
  $field->addValue(archimedes_shell_exec("hostname -f"));
  
  $field = $owl->createField('field_webroot', 'text');
  $field->addValue($_SERVER["DOCUMENT_ROOT"]);
  
  $db = parse_url($db_url);
  $dbName = substr($db['path'],1);
  
  $field = $owl->createField('field_dbhost', 'node_reference');
  $field->addValue($db['host']);
  
  $field = $owl->createField('field_dbname', 'text');
  $field->addValue($dbName);
  
  $field = $owl->createField('field_users', 'user_reference');
  $result = db_query("SELECT u.mail FROM {users} u WHERE u.status = 1");
  while ($u = db_fetch_object($result)) {
    if (archimedes_ends_with($u->mail,'@catalyst.net.nz')) // admin to set this value and store in variable table
      $field->addValue($u->mail);
  }
  
  $field = $owl->createField('field_db_size', 'integer');
  $field->addValue(db_result(db_query("SELECT pg_database_size('".$dbName."')"))); //  currently only works for pgsql
  
  $field = $owl->createField('field_sitedata', 'integer');
  $dataSize = preg_split('/[\s]+/',archimedes_shell_exec("du -bsL ".$_SERVER['DOCUMENT_ROOT'].base_path().file_directory_path()));
  $field->addValue($dataSize[0]);
  
  $field = $owl->createField('field_sitesize', 'integer');
  $rootSize = preg_split('/[\s]+/',archimedes_shell_exec("du -bsL ".$_SERVER['DOCUMENT_ROOT'].base_path()));
  $field->addValue($rootSize[0]);
  
  $field = $owl->createField('field_num_users', 'integer');
  $field->addValue(db_result(db_query("SELECT COUNT(uid) FROM {users}"))-1); // subtract one for public user
  
  $mField = $owl->createField('field_drupal_mod', 'node_reference');
  $mField->invokeMulti();
  $tField = $owl->createField('field_drupal_theme', 'node_reference');
  $tField->invokeMulti();
  $result = db_query("SELECT d.name, d.info, d.type FROM {system} d");
  while ($d = db_fetch_object($result)) {
    $info = unserialize($d->info);
    if ($d->type == 'module')
      $mField->addValue(array($d->name,$info['version']));
    elseif ($d->type == 'theme')
      $tField->addValue(array($d->name,$info['version']));
  }

  $owl->fields = array_merge($owl->fields, module_invoke_all('archimedes_fields', $owl->fields));
  
  return $owl;
  
  
} // archimedes_update()

/**
* Utility functions.
*/
function archimedes_ends_with( $str, $sub ) {
   return ( substr( $str, strlen( $str ) - strlen( $sub ) ) === $sub );
} // archimedes_ends_with()

function archimedes_shell_exec($cmd) {
  $args = func_get_args();

  //do not change the command itself, just the parameters.
  for ($x = 1; $x < sizeof($args); $x++) {
    $args[$x] = escapeshellarg($args[$x]);
  }
  $command = call_user_func_array('sprintf', $args);

  exec($command . ' 2>&1', $output, $result);
  
  return $output[0];
} // archimedes_shell_exec()
